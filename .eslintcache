[{"C:\\Users\\celin\\SideProjects\\Flock\\src\\index.js":"1","C:\\Users\\celin\\SideProjects\\Flock\\src\\components\\MenuBar.js":"2","C:\\Users\\celin\\SideProjects\\Flock\\src\\components\\TitleIntro.js":"3","C:\\Users\\celin\\SideProjects\\Flock\\src\\components\\FlocksList.js":"4","C:\\Users\\celin\\SideProjects\\Flock\\src\\components\\OustandingBox.js":"5","C:\\Users\\celin\\SideProjects\\Flock\\src\\pages\\issueDebit.js":"6","C:\\Users\\celin\\SideProjects\\Flock\\src\\pages\\IssueDebit.js":"7","C:\\Users\\celin\\SideProjects\\Flock\\src\\components\\ActivityBar.js":"8","C:\\Users\\celin\\SideProjects\\Flock\\src\\components\\ActivityBarData.js":"9","C:\\Users\\celin\\SideProjects\\Flock\\src\\pages\\App.js":"10","C:\\Users\\celin\\SideProjects\\Flock\\src\\pages\\firebaseConfig.js":"11","C:\\Users\\celin\\SideProjects\\Flock\\src\\pages\\CreateFlock.js":"12","C:\\Users\\celin\\SideProjects\\Flock\\src\\components\\Form.js":"13","C:\\Users\\celin\\SideProjects\\Flock\\src\\components\\Dropdowns.js":"14","C:\\Users\\celin\\SideProjects\\Flock\\src\\pages\\PayCredit.js":"15","C:\\Users\\celin\\SideProjects\\Flock\\src\\pages\\HomePage.js":"16"},{"size":560,"mtime":1620686927894,"results":"17","hashOfConfig":"18"},{"size":2237,"mtime":1620688241807,"results":"19","hashOfConfig":"18"},{"size":2055,"mtime":1620175666137,"results":"20","hashOfConfig":"18"},{"size":3326,"mtime":1620175657544,"results":"21","hashOfConfig":"18"},{"size":4035,"mtime":1620673383662,"results":"22","hashOfConfig":"18"},{"size":388,"mtime":1619833948395,"results":"23","hashOfConfig":"18"},{"size":999,"mtime":1620416666091,"results":"24","hashOfConfig":"18"},{"size":4015,"mtime":1620686621804,"results":"25","hashOfConfig":"18"},{"size":1631,"mtime":1619916526352,"results":"26","hashOfConfig":"18"},{"size":3403,"mtime":1620688111368,"results":"27","hashOfConfig":"18"},{"size":836,"mtime":1620263103388,"results":"28","hashOfConfig":"18"},{"size":1934,"mtime":1620272907526,"results":"29","hashOfConfig":"18"},{"size":10623,"mtime":1620614100847,"results":"30","hashOfConfig":"18"},{"size":4379,"mtime":1620620923335,"results":"31","hashOfConfig":"18"},{"size":960,"mtime":1620416631967,"results":"32","hashOfConfig":"18"},{"size":1362,"mtime":1620687740616,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"1uov0h9",{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"37"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"37"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"37"},"C:\\Users\\celin\\SideProjects\\Flock\\src\\index.js",["80","81"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './pages/App';\r\nimport IssueDebit from './pages/IssueDebit';\r\nimport PayCredit from './pages/PayCredit';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();",["82","83"],"C:\\Users\\celin\\SideProjects\\Flock\\src\\components\\MenuBar.js",["84","85","86","87","88","89"],"import React from 'react';\r\nimport '../pages/App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\r\n\r\n//import createMuiTheme from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  bar: {\r\n    background: \"#ADD7AD\",\r\n  },\r\n  typography: {\r\n    \"fontFamily\": \"Poppins\",\r\n    \"fontSize\": 20,\r\n    paddingRight: 35\r\n  },\r\n  homeButton:{\r\n    \"fontFamily\": \"Poppins\",\r\n    \"fontSize\": 20\r\n  },\r\n  navigation:{\r\n    padding: '20px',\r\n    display: 'flex',\r\n   // flexDirection: 'row',\r\n   // justifyContent: 'flex-end',\r\n   // float: 'right'\r\n  }\r\n}));\r\n\r\n\r\nfunction HeaderBar() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.bar} style={{boxShadow: \"none\"}}>\r\n        <Toolbar variant=\"dense\">\r\n\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.homeButton}>\r\n            F L O C K \r\n          </Typography>\r\n\r\n          <div className = {classes.navigation}>\r\n\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.typography}>\r\n            your dashboard\r\n          </Typography>\r\n\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.typography}>\r\n            your flocks\r\n          </Typography>\r\n\r\n          <Link to = \"/issue\">\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.typography}>\r\n              issue debits\r\n            </Typography>\r\n          </Link>\r\n\r\n            \r\n\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.typography}>\r\n              pay credits\r\n            </Typography>\r\n          </div>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderBar;","C:\\Users\\celin\\SideProjects\\Flock\\src\\components\\TitleIntro.js",[],"C:\\Users\\celin\\SideProjects\\Flock\\src\\components\\FlocksList.js",[],"C:\\Users\\celin\\SideProjects\\Flock\\src\\components\\OustandingBox.js",["90","91","92","93","94","95","96","97","98"],"import React from 'react';\r\nimport '../pages/App.css';\r\nimport styled from 'styled-components';\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Avatar } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { palette } from '@material-ui/system';\r\nimport { CallMissedSharp, CheckBoxOutlineBlankSharp } from '@material-ui/icons';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typographyCard: {\r\n    \"fontFamily\": \"Poppins\",\r\n    \"fontSize\": 20,\r\n    \"color\": \"#979B82\"\r\n  },\r\n  outstandingBoxContainer:{\r\n    backgroundColor: \"#769E76\",\r\n    borderRadius: \"20px\",\r\n    minWidth: 430,\r\n    maxHeight: 320,\r\n    marginLeft: 120,\r\n    marginBottom: 200,\r\n    overflowY: 'scroll',\r\n    overflowX: 'hidden',\r\n    height: \"100%\",\r\n    '&::-webkit-scrollbar': {\r\n      width: '0.45em',\r\n      height: '0.1em',\r\n      scrollMarginTop: '10px'\r\n      \r\n    },\r\n    '&::-webkit-scrollbar-track': {\r\n      boxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n      webkitBoxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n      scrollMarginTop: '10px'\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      height: '6px',\r\n      backgroundColor: 'rgba(0,0,0,.3)',\r\n      outline: '1px solid slategrey',\r\n      borderRadius: '10px',\r\n      scrollMarginTop: '10px'\r\n    },\r\n  },\r\n  card:{\r\n    borderRadius: 10,\r\n    maxWidth: \"200%\"\r\n  },\r\n  minListWidth:{\r\n    maxWidth: 1500,\r\n    maxHeight: 500\r\n  },\r\n  typographyOutstandingTitle:{\r\n    \"fontFamily\": \"Poppins\",\r\n    \"fontSize\": 25,\r\n    \"color\": \"#979B82\", \r\n    textAlign: 'center'\r\n  },\r\n}));\r\n\r\nconst ListItem=()=> {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className = {classes.card} style={{boxShadow: \"none\"}}>\r\n      <Typography className = {classes.typographyCard} style={{fontWeight: 500}}>\r\n        Flock: Japan\r\n        <br />\r\n        $20 from Jess\r\n      </Typography>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst OutstandingBox=(props)=>{\r\n  const classes = useStyles();\r\n  return(\r\n\r\n    <div>\r\n      <Box pt = {6} ml = {20}>\r\n        <Typography className = {classes.typographyOutstandingTitle} style={{fontWeight: 500}}>\r\n          {props.title}\r\n        </Typography>\r\n      </Box>\r\n      <Grid>\r\n        <Grid direction = \"column\" justify = \"center\" alignItems = \"center\" className = {classes.outstandingBoxContainer} >\r\n          <Box pl = {2.5} pr = {2.5} pt = {2.5}>\r\n            <ListItem/>\r\n          </Box>\r\n          <Box pl = {2.5} pr = {2.5} pt = {2}>\r\n            <ListItem/>\r\n          </Box>\r\n          <Box pl = {2.5} pr = {2.5} pt = {2}>\r\n            <ListItem/>\r\n          </Box>\r\n          <Box pl = {2.5} pr = {2.5} pt = {2}>\r\n            <ListItem/>\r\n          </Box>\r\n          <Box pl = {2.5} pr = {2.5} pt = {2}>\r\n            <ListItem/>\r\n          </Box>\r\n          <Box pl = {2.5} pr = {2.5} pt = {2}>\r\n            <ListItem/>\r\n          </Box>\r\n          <Box pl = {2.5} pr = {2.5} pt = {2} pb = {2}>\r\n            <ListItem/>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n \r\n  );\r\n}\r\n\r\nconst OutstandingBoxList=()=>{\r\n  const classes = useStyles();\r\n  return(\r\n      <Grid container spacing={0} direction  = \"row\" className = {classes.minListWidth}>\r\n        <Grid item lg = {4} md = {6} sm = {12} xs = {12}>\r\n          <OutstandingBox title = \"oustanding debits\"/>\r\n        </Grid>\r\n        <Grid item lg = {4} md = {6} sm = {12} xs = {12}>\r\n          <OutstandingBox title = \"oustanding credits\"/>\r\n        </Grid>\r\n        <Grid item lg = {4} md = {6} sm = {12} xs = {12}>\r\n          <OutstandingBox title = \"inbox\"/>\r\n        </Grid>\r\n      </Grid>    \r\n  );\r\n}\r\n\r\n//TODO:\r\n// have props to change bgcolor of outstanding boxes \r\n\r\nexport default OutstandingBoxList;","C:\\Users\\celin\\SideProjects\\Flock\\src\\pages\\issueDebit.js",[],"C:\\Users\\celin\\SideProjects\\Flock\\src\\pages\\IssueDebit.js",["99","100"],"import React from 'react';\r\nimport '../pages/App.css';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport Form from '../components/Form';\r\nimport MenuBar from '../components/MenuBar'\r\n\r\n//COMPONENTS MUST START WITH UPPERCASE\r\n\r\n{/* <form>\r\n                <h1>Issue a Debit</h1>\r\n                <label>Amount</label>\r\n                <input placeholder = \"How much they owe\" />\r\n            </form> */}\r\n\r\n\r\nconst IssueDebit = () => {\r\n    return (\r\n        <div>\r\n            <MenuBar/>\r\n            <Form \r\n                title = \"Issue a Receivable\"\r\n                description = \"Let someone know that they owe you money by submitting a ‘Issue a Debit’ record. Once they pay you back, they will send you a confirmation that they have paid you, and you can confirm the transaction (confirmations found in the inbox).\"\r\n                submit = \"Submit Request\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default IssueDebit;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\celin\\SideProjects\\Flock\\src\\components\\ActivityBar.js",["101"],"\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useState } from 'react';\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as GiIcons from \"react-icons/gi\";\r\nimport { Link } from 'react-router-dom';\r\nimport '../pages/App.css';\r\nimport { ActivityBarData } from './ActivityBarData';\r\n\r\n\r\n\r\n\r\n\r\nconst UseStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    \"fontFamily\": \"Poppins\",\r\n    \"fontSize\": 80,\r\n    \"color\": \"#ADD7AD\"\r\n  },\r\n  //activity bar before prompt\r\n  activityBar:{\r\n    \r\n    //maxWidth: 100,\r\n    height: '100vh',\r\n    display: 'inline',\r\n    justifyContent: 'center',\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: '-100%',\r\n    transition: '850ms',\r\n    transform: 'translateX(150%)',\r\n    transition: 'transform 300ms linear',\r\n    \r\n  },\r\n  //activity bar styling after prompted\r\n  activityBarActive:{\r\n    //right: '-100%',\r\n    position: 'absolute',\r\n    display: 'block',\r\n    top: 0,\r\n    right: 0,\r\n    height: '100%',\r\n    width: '20%',\r\n    backgroundColor: \"rgba(173, 215, 173,0.8)\", \r\n    transition: '800ms',\r\n    overflowX: 'hidden',\r\n    maxHeight: '100vh',\r\n    overFlowY: 'scroll',\r\n    // transition: 'transform 350ms linear',\r\n    // transform: 'translateX(0%)',\r\n    // transition: 'transform 350ms linear'\r\n  },\r\n\r\n  //each card style\r\n  activityCardStyle:{\r\n    marginBottom: 16,\r\n    marginRight: 30,\r\n//    marginLeft: 20,\r\n    paddingLeft: 20,\r\n    paddingRight: 20, \r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    maxWidth: 275,\r\n    borderRadius: 15\r\n  },\r\n\r\n  //transaction in activity card\r\n  cardTransaction:{\r\n    \"fontFamily\": \"Poppins\",\r\n    \"fontSize\": 20,\r\n    \"color\": \"#769E76\",\r\n    //display: \"flex\",\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'flex-start',\r\n    \r\n  },\r\n  //Date + Flock name in activity card\r\n  cardDetails:{\r\n    \"fontFamily\": \"Poppins\",\r\n    \"fontSize\": 15,\r\n    \"color\": \"#769E76\",\r\n    //display: \"flex\",\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'flex-start',\r\n  },\r\n  listStyle:{\r\n    listStyle: 'none',\r\n  },\r\n  activityBarToggle:{\r\n    width:'100%',\r\n    height: '80px',\r\n    display: 'flex',\r\n    justifyContent: 'start',\r\n    alignItems: 'center'\r\n  }, \r\n  activityBarOverflow:{\r\n\r\n  }\r\n  \r\n \r\n}));\r\n\r\nconst ActivityIcon=()=> {\r\n  const classes = UseStyles();\r\n  \r\n  const [sidebar, setSidebar] = useState(false)\r\n\r\n  const showSidebar = () => setSidebar(!sidebar)\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Grid justify=\"flex-end\" alignItems=\"flex-end\">\r\n          <Link to=\"#\">\r\n            <GiIcons.GiGoose onClick={showSidebar} \r\n              color = {'#979B82'}\r\n              style={{\r\n                  position: 'absolute',\r\n                  right: 40,\r\n                  bottom: 40,\r\n              }}\r\n            />\r\n          </Link>\r\n        </Grid>\r\n      </div>\r\n      <nav className = {sidebar ? classes.activityBarActive : classes.activityBar}>\r\n        <ul>\r\n          <li className = {classes.activityBarToggle}>\r\n            <Link to = \"#\" className = 'menu-bars'>\r\n              <AiIcons.AiFillCloseCircle color = {'white'} onClick={showSidebar}/>\r\n            </Link>\r\n          </li>\r\n          {ActivityBarData.map((item, index) => {\r\n            return (\r\n                <li key={index} className = {classes.listStyle}>\r\n                  <Card className = {classes.activityCardStyle} style={{boxShadow: \"none\"}}>\r\n                    <span className = {classes.cardDetails} style={{fontWeight: 500}}>{item.date}</span>\r\n                    <br/>\r\n                    <span className = {classes.cardDetails} style={{fontWeight: 500}}>{item.flock}</span>\r\n                    <br/>\r\n                    <span className = {classes.cardTransaction} style={{fontWeight: 600}}>{item.transaction}</span>\r\n                  </Card>\r\n                </li> \r\n            )\r\n          })}\r\n        </ul>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default ActivityIcon;","C:\\Users\\celin\\SideProjects\\Flock\\src\\components\\ActivityBarData.js",["102","103","104"],"import React from 'react'\r\nimport * as GiIcons from \"react-icons/gi\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\n\r\n//paths will be routed to the flock page - should add another attributed called path: '' \r\n//this data should be put into firebase and extracted from firebase in the future\r\n\r\n\r\nexport const ActivityBarData = [\r\n    {\r\n        date: 'march 13, 2020',\r\n        flock: 'rent',\r\n        transaction: 'Angela issued you a credit for $130',\r\n        transactionID: '1'\r\n    },\r\n    {\r\n        date: 'march 13, 2020',\r\n        flock: 'rent',\r\n        transaction: 'Angela issued you a credit for $130',\r\n        transactionID: '2'\r\n    },\r\n    {\r\n        date: 'march 13, 2020',\r\n        flock: 'rent',\r\n        transaction: 'Angela issued you a credit for $130 lorem ipsum some extra random text',\r\n        transactionID: '3'\r\n    },\r\n    {\r\n        date: 'march 13, 2020',\r\n        flock: 'rent',\r\n        transaction: 'Angela issued you a credit for $130 lorem ipsum some extra random text',\r\n        transactionID: '3'\r\n    },\r\n    {\r\n        date: 'march 13, 2020',\r\n        flock: 'rent',\r\n        transaction: 'Angela issued you a credit for $130 lorem ipsum some extra random text',\r\n        transactionID: '3'\r\n    },\r\n    {\r\n        date: 'march 13, 2020',\r\n        flock: 'rent',\r\n        transaction: 'Angela issued you a credit for $130 lorem ipsum some extra random text',\r\n        transactionID: '3'\r\n    },\r\n    {\r\n        date: 'march 13, 2020',\r\n        flock: 'rent',\r\n        transaction: 'Angela issued you a credit for $130 lorem ipsum some extra random text',\r\n        transactionID: '3'\r\n    }\r\n]",["105","106"],"C:\\Users\\celin\\SideProjects\\Flock\\src\\pages\\App.js",["107","108","109","110","111","112","113","114","115","116","117"],"import { ThemeProvider } from '@material-ui/core/styles';\r\nimport { default as React } from 'react';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport withFirebaseAuth from 'react-with-firebase-auth';\r\nimport FlockList from '../components/FlocksList';\r\nimport HeaderBar from '../components/MenuBar';\r\nimport OutstandingBoxList from '../components/OustandingBox';\r\nimport TitleIntro from '../components/TitleIntro';\r\nimport ActivityIcon from '../components/ActivityBar';\r\nimport './App.css';\r\nimport CreateFlock from './CreateFlock';\r\nimport { db, firebaseAppAuth, providers } from './firebaseConfig.js';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport IssueDebit from './IssueDebit';\r\n\r\nimport HomePage from './HomePage';\r\n\r\n\r\n// const options = [\r\n//   'flock1', 'scottsaho', 'celinasthebest:)'\r\n// ];\r\n// const defaultOption = options[0];\r\n\r\n// <Dropdown options={options} onChange={options._onSelect} \r\n//               value={defaultOption} placeholder=\"Select an option\" />;\r\n\r\nvar flockOptions = [];\r\nvar defaultOption = \"Please select a flock.\";\r\nvar profileMatch = false;\r\nvar flockIDs = [];\r\nvar loopCount;\r\n\r\nconst App = ({ user, signOut, signInWithGoogle }) => {\r\n  \r\n  //Scan through database for user profileMatch, then load user-specific flocks.\r\n  db.collection('user').get().then(querySnapshot =>{\r\n    querySnapshot.forEach(doc => {\r\n      if (doc.data()!=null && user!=null)\r\n        if (doc.data().id == user.uid) {\r\n          Object.assign(flockIDs, doc.data().flocks) //load flockIDs with the flock IDs\r\n          profileMatch = true;\r\n        }\r\n    })\r\n    if (profileMatch == false && user!=null) {\r\n      const res = db.collection('user').add({\r\n        name: user.displayName,\r\n        flocks: [],\r\n        id: user.uid,\r\n      });\r\n    }//end of if profileMatch\r\n  })//end of firebase ref\r\n\r\n  db.collection('flock-groups').get().then(querySnapshot => {//Translate from flock ID to flockName for dropdown\r\n    for (var i=0; i < flockIDs.length; i++) {//To-do: add warning that you shouldn't have two flocks with the same name, otherwise code will die\r\n      querySnapshot.forEach(doc => {\r\n        if (doc.id == flockIDs[i] && loopCount == 0) {\r\n          flockOptions.push(doc.data().flockName);\r\n        }\r\n      })\r\n    }\r\n    loopCount++\r\n  })\r\n\r\n  return (\r\n    <ThemeProvider>\r\n        <div className=\"App\">\r\n          \r\n\r\n          <Router>\r\n            <HeaderBar/>\r\n            <Switch>\r\n                <Route path = '/issue'><IssueDebit/></Route>\r\n                <Route path = '/'><HomePage/></Route>\r\n            </Switch>\r\n          </Router>\r\n\r\n          <Dropdown options={flockOptions} onChange={flockOptions._onSelect} \r\n          value={defaultOption} placeholder=\"Select an option\" />\r\n          \r\n        </div>\r\n\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            {\r\n              user \r\n                ? <p>Hello, {user.displayName}</p>\r\n                : <p>Please sign in.</p>\r\n            }\r\n            {\r\n              user\r\n                ? <button onClick={signOut}>Sign out</button>\r\n                : <button onClick={signInWithGoogle}>Sign in with Google</button>\r\n            }\r\n          </header>\r\n        </div>\r\n\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n\r\nexport default withFirebaseAuth({\r\n  providers,\r\n  firebaseAppAuth,\r\n})(App);\r\n","C:\\Users\\celin\\SideProjects\\Flock\\src\\pages\\firebaseConfig.js",[],"C:\\Users\\celin\\SideProjects\\Flock\\src\\pages\\CreateFlock.js",["118","119","120"],"import React, { useReducer, useState } from 'react';\r\nimport 'react-dropdown/style.css';\r\n\r\nimport './App.css';\r\n//COMPONENTS MUST START WITH UPPERCASE\r\n\r\nimport {db, firebaseAppAuth, providers} from './firebaseConfig.js';\r\n//use this component to create a new flock\r\nimport withFirebaseAuth from 'react-with-firebase-auth'\r\nimport firebase from 'firebase'\r\n\r\n\r\nclass CreateFlock extends React.Component {      \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: ''};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        //alert('A name was submitted: ' + this.state.value);\r\n        event.preventDefault();\r\n\r\n        db.collection('flock-groups').add({\r\n            flockName: this.state.value,\r\n            members: [firebase.auth().currentUser.uid],\r\n        }).then(function(docRef) {\r\n\r\n            db.collection('user').get().then(querySnapshot =>{\r\n                querySnapshot.forEach(doc => {\r\n                    var userRef = db.collection('user').doc(doc.id);\r\n                    if (doc.data().id == firebase.auth().currentUser.uid) {\r\n                        userRef.update({\r\n                            flocks: firebase.firestore.FieldValue.arrayUnion(docRef.id)\r\n                        });\r\n                    }\r\n                })\r\n            });\r\n\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n            Name:\r\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nexport default withFirebaseAuth({\r\n    providers,\r\n    firebaseAppAuth,\r\n  })(CreateFlock);\r\n  ","C:\\Users\\celin\\SideProjects\\Flock\\src\\components\\Form.js",["121","122","123","124","125","126","127","128"],"import React from 'react';\r\nimport '../pages/App.css';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport Dropdowns from './Dropdowns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {TextField} from '@material-ui/core';\r\n\r\nimport { db } from '../pages/firebaseConfig'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    titleTypography: {\r\n        \"fontFamily\": \"Poppins\",\r\n        \"fontSize\": 50,\r\n        \"color\": \"#769E76\",\r\n        alignItems: 'center',\r\n        fontWeight: '600'\r\n    },\r\n    divStyle:{\r\n        position: 'absolute', \r\n        left: '50%', \r\n        top: '25%',\r\n        transform: 'translate(-50%, -50%)',\r\n        maxWidth: '35%'\r\n    },\r\n    centerTitle:{\r\n        display: 'flex',  \r\n        justifyContent:'center', \r\n        marginTop: '335px',\r\n        marginBottom: ''\r\n    },\r\n    descriptionStyle:{\r\n        marginBottom: '40px',\r\n        fontFamily: 'Poppins'\r\n    },\r\n    submit:{\r\n        fontFamily: \"Poppins\",\r\n        color: 'rgba(255, 255, 255, 1)',\r\n\r\n        width: '100%',\r\n        height: '56px',\r\n        borderRadius: '4px',\r\n        position: 'relative',\r\n        backgroundColor: 'rgba(118,158,118,1)',\r\n        border: 'rgba(118,158,118,1)',\r\n        \r\n        transition: '0.3s all',\r\n        '&:hover':{\r\n            backgroundColor: 'rgba(255, 255, 255, 1)',\r\n            color: 'rgba(118,158,118,1)',\r\n            boxShadow: '0px 4px 20px 0px rgba(118,158,118,0.5)',\r\n            cursor: 'pointer',\r\n            borderColor: 'rgba(118,158,118,1)',\r\n            outlineColor: 'rgba(118,158,118,1)',\r\n        }\r\n    },\r\n    labelStyle:{\r\n        fontFamily: 'Poppins'\r\n    }, \r\n    textFieldStyle:{\r\n        '& .MuiOutlinedInput-root': {\r\n            '&:hover fieldset': {\r\n                borderColor: 'rgba(118,158,118,1)',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: '#979B82',\r\n            },\r\n        }\r\n    },\r\n    messageStyle:{\r\n        marginBottom: '30px', \r\n        marginTop: '20px',\r\n        '& label.Mui-focused': {\r\n            color: '#979B82',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: '#979B82',\r\n        },\r\n    }\r\n}));\r\n\r\n//props: title, description\r\n\r\nconst Form = (props) => {\r\n    \r\n    const [amount, setAmount] = useState(0);\r\n    const [expenseName, setExpenseName] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n\r\n    const handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        if (name == 'amount' ){\r\n            setAmount(value);\r\n        }\r\n        else if (name == 'expenseName'){\r\n            setExpenseName(value);\r\n        }\r\n        else if (name == 'message'){\r\n            setMessage(value);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        //this is where you will send the values to the fb\r\n        console.log(amount);\r\n        alert('Amount: ' + amount + ' | Expense: ' + expenseName + ' | Message: ' + message);\r\n        event.preventDefault();\r\n        //use 'amount' and 'expenseName' and 'message' to retrive the values\r\n    }\r\n\r\n    const classes = useStyles();\r\n        return(\r\n            <div className = {classes.divStyle}>\r\n                <div className = {classes.centerTitle}>\r\n                    <Typography className = {classes.titleTypography}>{props.title}</Typography>\r\n                </div>\r\n                <Box>\r\n                    <Typography className = {classes.descriptionStyle}>{props.description}</Typography>\r\n                </Box>\r\n                \r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid direction = \"row\" container spacing={0}>\r\n                        <Grid item lg = {6} style = {{marginBottom: '25px'}}>\r\n                            <Typography className = {classes.labelStyle}>Amount</Typography>\r\n                            <TextField \r\n                                id = \"outlined-basic\" \r\n                                variant = \"outlined\" \r\n                                className = {classes.textFieldStyle}\r\n                                \r\n                                name = 'amount'\r\n                                type = 'number'   \r\n                                value = {amount}     \r\n                                onChange={handleInputChange}>\r\n                            </TextField>\r\n                        </Grid>\r\n\r\n                        <Grid item lg = {6} style = {{marginBottom: '25px'}}>\r\n                            <Typography className = {classes.labelStyle}>Name of Expense</Typography>\r\n                            <TextField \r\n                                id = \"outlined-basic\" \r\n                                variant = \"outlined\" \r\n                                className = {classes.textFieldStyle}\r\n                                \r\n                                name = 'expenseName'\r\n                                type = 'text'\r\n                                value={expenseName}\r\n                                onChange={handleInputChange}>\r\n                            </TextField>\r\n                        </Grid>\r\n\r\n                        <br/>\r\n                        <Dropdowns/>\r\n                        <br/>\r\n\r\n                        <TextField \r\n                            id = \"standard-basic\" \r\n                            label = \"Message (optional)\" \r\n                            fullWidth = 'true' \r\n                            className = {classes.messageStyle}\r\n\r\n                            name = 'message'\r\n                            type = 'text'\r\n                            value={message}\r\n                            onChange={handleInputChange}>\r\n                        </TextField>\r\n \r\n                    </Grid>\r\n\r\n                    <input type=\"submit\" value={props.submit} className = {classes.submit}/>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default Form;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// class Form extends React.Component{\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state={\r\n//             amount: 0,\r\n//             expenseName: ''\r\n//         };\r\n//         this.handleInputChange = this.handleInputChange.bind(this);\r\n//     }\r\n\r\n//     handleInputChange(event){\r\n//         const target = event.target;\r\n//         const value = target.value;\r\n//         const name = target.name;\r\n\r\n//         this.setState({\r\n//             [name]: value\r\n//         });\r\n//     }\r\n\r\n//     handleSubmit(event){\r\n//         //this is where you will send the values to the fb\r\n//         alert(\r\n//             'Amount: ' + this.state.amount);\r\n//         event.preventDefault();\r\n//     }\r\n\r\n//     render(){\r\n//         const { classes } = this.props;\r\n//         return(\r\n//             <div>\r\n//                 <Typography className = {classes.titleTypography}>Issue a Receivable</Typography>\r\n                \r\n//                 <form onSubmit={this.handleSubmit}>\r\n//                     <label>\r\n//                         Amount \r\n//                         <br/>\r\n//                         <input\r\n//                             name = 'amount'\r\n//                             type = 'number'\r\n//                             value={this.state.amount}\r\n//                             onChange={this.handleInputChange}>\r\n//                         </input>\r\n//                     </label>\r\n//                     <br />\r\n\r\n//                     <label>\r\n//                         Name of Expense\r\n//                         <br/>\r\n//                         <input\r\n//                             name = 'expenseName'\r\n//                             type = 'text'\r\n//                             value={this.state.expenseName}\r\n//                             onChange={this.handleInputChange}>\r\n//                         </input>\r\n//                     </label>\r\n\r\n//                     <input type=\"submit\" value=\"Submit\" />\r\n//                 </form>\r\n//             </div>\r\n            \r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default withStyles(styles, { withTheme: true })(Form);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const UseStyles = makeStyles((theme) => ({\r\n//     titleTypography: {\r\n//       \"fontFamily\": \"Poppins\",\r\n//       \"fontSize\": 50,\r\n//       \"color\": \"#769E76\"\r\n//     },\r\n//     titleStyle:{\r\n//         position: 'absolute', \r\n//         left: '50%', \r\n//         top: '25%',\r\n//         transform: 'translate(-50%, -50%)'\r\n//     },\r\n//     formStyle:{\r\n//         position: 'absolute', \r\n//         left: '50%', \r\n//         top: '25%',\r\n//         transform: 'translate(-50%, -50%)'\r\n//     }\r\n// }));\r\n\r\n// const Form = () =>{\r\n\r\n//     const [amount, setAmount] = useState(\"\");\r\n//     const [transactionName, setTransaction] = useState(\"\");\r\n//     const [message, setMessage] = useState(\"\");\r\n\r\n//     const classes = UseStyles();\r\n//     return (\r\n//         <div>\r\n//             <Box className = {classes.titleStyle}>\r\n//                 <Typography className = {classes.titleTypography} style={{fontWeight: 600}}>Issue a Receivable</Typography>\r\n//             </Box>\r\n            \r\n//             <form className = {classes.formStyle}>\r\n            \r\n//                 <label>Amount</label>\r\n//                 <input \r\n//                     placeholder=\"Amount\" \r\n//                     value = {amount}\r\n//                     onChange={(e) => setAmount(e.target.value)}/>\r\n\r\n//                 <label>Transaction</label>\r\n//                 <input \r\n//                     placeholder=\"Transaction Name\"\r\n//                     value = {transactionName}\r\n//                     onChange={(e) => setTransaction(e.target.value)}/>\r\n\r\n//                 <label>Message</label>\r\n//                 <input \r\n//                     placeholder=\"Message\"\r\n//                     value = {message}\r\n//                     onChange={(e) => setMessage(e.target.value)}/>\r\n\r\n//             </form>\r\n\r\n//             <h3>Your amount is: {amount}</h3>\r\n//             <h3>Your transaction is: {transactionName}</h3>\r\n//             <h3>Your message is: {message}</h3>\r\n            \r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// //values are what you want to send back to fb\r\n\r\n// export default Form;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\celin\\SideProjects\\Flock\\src\\components\\Dropdowns.js",["129","130","131","132","133","134","135","136","137"],"import React, {useState} from 'react';\r\nimport { db, firebaseAppAuth, providers } from '../pages/firebaseConfig.js';\r\nimport Dropdown from 'react-dropdown';\r\nimport firebase from 'firebase';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nvar flockOptions = [];\r\nvar defaultOption = \"Please select a flock.\";\r\nvar flockIDs = [];\r\nvar userIDs = [];\r\nvar loopCount;\r\n\r\nconst Dropdowns = () => {\r\n    \r\n    const [selectedOptionFlock, setFlock] = useState(null);\r\n    const [selectedOptionUser, setSelectedUser] = useState(null);\r\n    const [isSelected, setIsSelected] = useState(false);\r\n    \r\n    const toggleIsSelected = () => setIsSelected(isSelected => !isSelected);\r\n\r\n    //setIsSelected(isSelected => !isSelected);\r\n\r\n    const handleChange = (selectedOptionFlock) => {\r\n        setFlock(selectedOptionFlock);\r\n        setIsSelected(!isSelected);\r\n\r\n        //the second dropdown indicates boolean is true, but prints out false? maybe cause need to exit function to update\r\n        console.log('boolean: ', isSelected); \r\n        console.log(`Option selected:`, selectedOptionFlock);\r\n    };\r\n\r\n    const handleChangeUser = (selectedOptionUser) => {\r\n        console.log('boolean: ', isSelected); //should print out true here\r\n        setSelectedUser(selectedOptionUser);\r\n        console.log(\"User selected:\", selectedOptionUser);\r\n    };\r\n\r\n\r\n    function getFlockLists() {\r\n        var user = firebase.auth().currentUser;\r\n\r\n        //Scan through database for user profileMatch, then load user-specific flocks.\r\n        db.collection('user').get().then(querySnapshot =>{\r\n            querySnapshot.forEach(doc => {\r\n                if (doc.data()!=null && user!=null)\r\n                    if (doc.data().id == user.uid) {\r\n                        Object.assign(flockIDs, doc.data().flocks) //load flockIDs with the flock IDs\r\n                    }\r\n            })\r\n        })//end of firebase ref\r\n        \r\n        /*\r\n        db.collection('flock-groups').get().then(querySnapshot => {//Translate from flock ID to flockName for dropdown\r\n            for (var i=0; i < flockIDs.length; i++) {//To-do: add warning that you shouldn't have two flocks with the same name, otherwise code will die\r\n                querySnapshot.forEach(doc => {\r\n                if (doc.id == flockIDs[i] && loopCount == 0) {\r\n                    flockOptions.push(doc.data().flockName);\r\n                }\r\n                })\r\n            }\r\n            loopCount++\r\n        })\r\n        */\r\n\r\n        return flockIDs;\r\n    }\r\n\r\n    function getFlockUsers() {\r\n        db.collection('flock-groups').get().then(querySnapshot =>{\r\n            querySnapshot.forEach(doc => {\r\n                if (doc.data()!=null)\r\n                    if (doc.id == selectedOptionFlock) {\r\n                        Object.assign(userIDs, doc.data().members) //load flockIDs with the flock IDs\r\n                    }\r\n            })\r\n        })//end of firebase ref\r\n        console.log(userIDs);\r\n        return userIDs;\r\n    }\r\n\r\n//flock dropdowns has options: options={getFlockLists()\r\n//user dropdowns has options (if true): options = {getFlockUsers()}\r\n\r\n      return (\r\n          <Grid direction = \"row\" container spacing={0}>\r\n              <Grid item lg = {6}>\r\n                <Typography>Which flock owes you?</Typography>\r\n                <Dropdown \r\n                    value={selectedOptionFlock} \r\n                    placeholder={defaultOption}\r\n                    onChange={handleChange} \r\n                    options={['option1', 'option2']}/>\r\n              </Grid>\r\n\r\n              <Grid item lg = {6}>\r\n                <Typography>Who owes you?</Typography>\r\n\r\n                {isSelected ? \r\n                (\r\n                <Dropdown \r\n                    value={selectedOptionUser} \r\n                    placeholder={\"Please select a user.\"}\r\n                    onChange={handleChangeUser}\r\n                    options = {['Boolean is true']} />\r\n                ) : (\r\n                    <Dropdown \r\n                    value={selectedOptionUser} \r\n                    placeholder={\"Please select a user.\"}\r\n                    onChange={handleChangeUser}\r\n                    options = {['Please select a flock']} />\r\n                )}\r\n\r\n              </Grid>\r\n          </Grid>\r\n      );\r\n  }\r\n  \r\nexport default Dropdowns;","C:\\Users\\celin\\SideProjects\\Flock\\src\\pages\\PayCredit.js",["138","139"],"import React from 'react';\r\nimport '../pages/App.css';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport Form from '../components/Form';\r\nimport MenuBar from '../components/MenuBar'\r\n\r\n//COMPONENTS MUST START WITH UPPERCASE\r\n\r\n{/* <form>\r\n                <h1>Issue a Debit</h1>\r\n                <label>Amount</label>\r\n                <input placeholder = \"How much they owe\" />\r\n            </form> */}\r\n\r\n\r\nconst PayCredit = () => {\r\n    return (\r\n        <div>\r\n            <MenuBar/>\r\n            <Form \r\n                title = \"Pay a Credit\"\r\n                description = \"Let the person you owe know that you have paid them or e-transfered them by submitting a ‘pay a credit’ confirmation. Note: your credit record will be removed once they confirm they have received your money.\"\r\n                submit = \"Submit Confirmation\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PayCredit;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\celin\\SideProjects\\Flock\\src\\pages\\HomePage.js",["140","141","142","143","144","145","146"],"import { ThemeProvider } from '@material-ui/core/styles';\r\nimport { default as React } from 'react';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport withFirebaseAuth from 'react-with-firebase-auth';\r\nimport FlockList from '../components/FlocksList';\r\nimport HeaderBar from '../components/MenuBar';\r\nimport OutstandingBoxList from '../components/OustandingBox';\r\nimport TitleIntro from '../components/TitleIntro';\r\nimport ActivityIcon from '../components/ActivityBar';\r\nimport './App.css';\r\nimport CreateFlock from './CreateFlock';\r\nimport { db, firebaseAppAuth, providers } from './firebaseConfig.js';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\n\r\n// const options = [\r\n//   'flock1', 'scottsaho', 'celinasthebest:)'\r\n// ];\r\n// const defaultOption = options[0];\r\n\r\n// <Dropdown options={options} onChange={options._onSelect} \r\n//               value={defaultOption} placeholder=\"Select an option\" />;\r\n\r\nconst HomePage = () => {\r\n  \r\n  return (\r\n\r\n    <div className=\"App\">\r\n        <TitleIntro/>\r\n        <FlockList/>\r\n        <OutstandingBoxList/>\r\n        \r\n        <Router>\r\n        <ActivityIcon/>\r\n        <Switch>\r\n            <Route path = '/' />\r\n        </Switch>\r\n        </Router>\r\n        \r\n        \r\n        <CreateFlock/>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default HomePage;\r\n",{"ruleId":"147","severity":1,"message":"148","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":18},{"ruleId":"147","severity":1,"message":"151","line":6,"column":8,"nodeType":"149","messageId":"150","endLine":6,"endColumn":17},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"147","severity":1,"message":"156","line":7,"column":8,"nodeType":"149","messageId":"150","endLine":7,"endColumn":18},{"ruleId":"147","severity":1,"message":"157","line":8,"column":8,"nodeType":"149","messageId":"150","endLine":8,"endColumn":16},{"ruleId":"147","severity":1,"message":"158","line":9,"column":10,"nodeType":"149","messageId":"150","endLine":9,"endColumn":26},{"ruleId":"147","severity":1,"message":"159","line":10,"column":27,"nodeType":"149","messageId":"150","endLine":10,"endColumn":33},{"ruleId":"147","severity":1,"message":"160","line":10,"column":35,"nodeType":"149","messageId":"150","endLine":10,"endColumn":41},{"ruleId":"147","severity":1,"message":"161","line":10,"column":49,"nodeType":"149","messageId":"150","endLine":10,"endColumn":54},{"ruleId":"147","severity":1,"message":"162","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":14},{"ruleId":"147","severity":1,"message":"163","line":4,"column":10,"nodeType":"149","messageId":"150","endLine":4,"endColumn":23},{"ruleId":"147","severity":1,"message":"164","line":4,"column":25,"nodeType":"149","messageId":"150","endLine":4,"endColumn":39},{"ruleId":"147","severity":1,"message":"165","line":6,"column":10,"nodeType":"149","messageId":"150","endLine":6,"endColumn":16},{"ruleId":"147","severity":1,"message":"166","line":11,"column":8,"nodeType":"149","messageId":"150","endLine":11,"endColumn":19},{"ruleId":"147","severity":1,"message":"167","line":12,"column":8,"nodeType":"149","messageId":"150","endLine":12,"endColumn":19},{"ruleId":"147","severity":1,"message":"168","line":13,"column":10,"nodeType":"149","messageId":"150","endLine":13,"endColumn":17},{"ruleId":"147","severity":1,"message":"169","line":14,"column":10,"nodeType":"149","messageId":"150","endLine":14,"endColumn":25},{"ruleId":"147","severity":1,"message":"170","line":14,"column":27,"nodeType":"149","messageId":"150","endLine":14,"endColumn":52},{"ruleId":"147","severity":1,"message":"171","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":16},{"ruleId":"172","severity":1,"message":"173","line":10,"column":1,"nodeType":"174","messageId":"175","endLine":14,"endColumn":24},{"ruleId":"176","severity":1,"message":"177","line":34,"column":5,"nodeType":"178","messageId":"179","endLine":34,"endColumn":15},{"ruleId":"147","severity":1,"message":"180","line":1,"column":8,"nodeType":"149","messageId":"150","endLine":1,"endColumn":13},{"ruleId":"147","severity":1,"message":"181","line":2,"column":13,"nodeType":"149","messageId":"150","endLine":2,"endColumn":20},{"ruleId":"147","severity":1,"message":"182","line":3,"column":13,"nodeType":"149","messageId":"150","endLine":3,"endColumn":20},{"ruleId":"152","replacedBy":"183"},{"ruleId":"154","replacedBy":"184"},{"ruleId":"147","severity":1,"message":"185","line":6,"column":8,"nodeType":"149","messageId":"150","endLine":6,"endColumn":17},{"ruleId":"147","severity":1,"message":"186","line":8,"column":8,"nodeType":"149","messageId":"150","endLine":8,"endColumn":26},{"ruleId":"147","severity":1,"message":"187","line":9,"column":8,"nodeType":"149","messageId":"150","endLine":9,"endColumn":18},{"ruleId":"147","severity":1,"message":"188","line":10,"column":8,"nodeType":"149","messageId":"150","endLine":10,"endColumn":20},{"ruleId":"147","severity":1,"message":"189","line":12,"column":8,"nodeType":"149","messageId":"150","endLine":12,"endColumn":19},{"ruleId":"190","severity":1,"message":"191","line":41,"column":27,"nodeType":"192","messageId":"179","endLine":41,"endColumn":29},{"ruleId":"190","severity":1,"message":"191","line":46,"column":22,"nodeType":"192","messageId":"179","endLine":46,"endColumn":24},{"ruleId":"147","severity":1,"message":"193","line":47,"column":13,"nodeType":"149","messageId":"150","endLine":47,"endColumn":16},{"ruleId":"194","severity":1,"message":"195","line":57,"column":29,"nodeType":"196","messageId":"197","endLine":61,"endColumn":8},{"ruleId":"190","severity":1,"message":"191","line":58,"column":20,"nodeType":"192","messageId":"179","endLine":58,"endColumn":22},{"ruleId":"190","severity":1,"message":"191","line":58,"column":48,"nodeType":"192","messageId":"179","endLine":58,"endColumn":50},{"ruleId":"147","severity":1,"message":"198","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":27},{"ruleId":"147","severity":1,"message":"199","line":1,"column":29,"nodeType":"149","messageId":"150","endLine":1,"endColumn":37},{"ruleId":"190","severity":1,"message":"191","line":38,"column":39,"nodeType":"192","messageId":"179","endLine":38,"endColumn":41},{"ruleId":"147","severity":1,"message":"171","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":16},{"ruleId":"147","severity":1,"message":"163","line":6,"column":10,"nodeType":"149","messageId":"150","endLine":6,"endColumn":23},{"ruleId":"147","severity":1,"message":"164","line":6,"column":25,"nodeType":"149","messageId":"150","endLine":6,"endColumn":39},{"ruleId":"147","severity":1,"message":"200","line":9,"column":8,"nodeType":"149","messageId":"150","endLine":9,"endColumn":17},{"ruleId":"147","severity":1,"message":"201","line":15,"column":10,"nodeType":"149","messageId":"150","endLine":15,"endColumn":12},{"ruleId":"190","severity":1,"message":"191","line":103,"column":18,"nodeType":"192","messageId":"179","endLine":103,"endColumn":20},{"ruleId":"190","severity":1,"message":"191","line":106,"column":23,"nodeType":"192","messageId":"179","endLine":106,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":109,"column":23,"nodeType":"192","messageId":"179","endLine":109,"endColumn":25},{"ruleId":"147","severity":1,"message":"202","line":2,"column":14,"nodeType":"149","messageId":"150","endLine":2,"endColumn":29},{"ruleId":"147","severity":1,"message":"203","line":2,"column":31,"nodeType":"149","messageId":"150","endLine":2,"endColumn":40},{"ruleId":"147","severity":1,"message":"204","line":9,"column":5,"nodeType":"149","messageId":"150","endLine":9,"endColumn":17},{"ruleId":"147","severity":1,"message":"205","line":13,"column":5,"nodeType":"149","messageId":"150","endLine":13,"endColumn":14},{"ruleId":"147","severity":1,"message":"206","line":21,"column":11,"nodeType":"149","messageId":"150","endLine":21,"endColumn":27},{"ruleId":"147","severity":1,"message":"207","line":41,"column":14,"nodeType":"149","messageId":"150","endLine":41,"endColumn":27},{"ruleId":"190","severity":1,"message":"191","line":48,"column":39,"nodeType":"192","messageId":"179","endLine":48,"endColumn":41},{"ruleId":"147","severity":1,"message":"208","line":70,"column":14,"nodeType":"149","messageId":"150","endLine":70,"endColumn":27},{"ruleId":"190","severity":1,"message":"191","line":74,"column":32,"nodeType":"192","messageId":"179","endLine":74,"endColumn":34},{"ruleId":"147","severity":1,"message":"171","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":16},{"ruleId":"172","severity":1,"message":"173","line":10,"column":1,"nodeType":"174","messageId":"175","endLine":14,"endColumn":24},{"ruleId":"147","severity":1,"message":"163","line":1,"column":10,"nodeType":"149","messageId":"150","endLine":1,"endColumn":23},{"ruleId":"147","severity":1,"message":"171","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":16},{"ruleId":"147","severity":1,"message":"209","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":24},{"ruleId":"147","severity":1,"message":"210","line":7,"column":8,"nodeType":"149","messageId":"150","endLine":7,"endColumn":17},{"ruleId":"147","severity":1,"message":"201","line":13,"column":10,"nodeType":"149","messageId":"150","endLine":13,"endColumn":12},{"ruleId":"147","severity":1,"message":"202","line":13,"column":14,"nodeType":"149","messageId":"150","endLine":13,"endColumn":29},{"ruleId":"147","severity":1,"message":"203","line":13,"column":31,"nodeType":"149","messageId":"150","endLine":13,"endColumn":40},"no-unused-vars","'IssueDebit' is defined but never used.","Identifier","unusedVar","'PayCredit' is defined but never used.","no-native-reassign",["211"],"no-negated-in-lhs",["212"],"'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'MuiThemeProvider' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'styled' is defined but never used.","'ThemeProvider' is defined but never used.","'createMuiTheme' is defined but never used.","'Avatar' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'palette' is defined but never used.","'CallMissedSharp' is defined but never used.","'CheckBoxOutlineBlankSharp' is defined but never used.","'Dropdown' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-dupe-keys","Duplicate key 'transition'.","ObjectExpression","unexpected","'React' is defined but never used.","'GiIcons' is defined but never used.","'AiIcons' is defined but never used.",["211"],["212"],"'FlockList' is defined but never used.","'OutstandingBoxList' is defined but never used.","'TitleIntro' is defined but never used.","'ActivityIcon' is defined but never used.","'CreateFlock' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'res' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i', 'loopCount'.","ArrowFunctionExpression","unsafeRefs","'useReducer' is defined but never used.","'useState' is defined but never used.","'PropTypes' is defined but never used.","'db' is defined but never used.","'firebaseAppAuth' is defined but never used.","'providers' is defined but never used.","'flockOptions' is assigned a value but never used.","'loopCount' is defined but never used.","'toggleIsSelected' is assigned a value but never used.","'getFlockLists' is defined but never used.","'getFlockUsers' is defined but never used.","'withFirebaseAuth' is defined but never used.","'HeaderBar' is defined but never used.","no-global-assign","no-unsafe-negation"]